{"version":3,"sources":["components/Buttons.js","components/Header.js","components/Footer.js","components/About.js","components/Task.js","components/Tasks.js","components/AddTask.js","App.js","reportWebVitals.js","index.js"],"names":["Buttons","color","text","onClick","style","backgroundColor","className","defaultProps","Header","title","onAdd","showAdd","location","useLocation","pathname","footer","to","About","Task","task","onDelete","onToggle","reminder","onDoubleClick","id","cursor","day","Tasks","tasks","map","AddTask","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","App","showAddTask","setShowAddTask","tasksM","setTasks","useEffect","a","fetchTasks","tasksFromServer","getTasks","fetch","res","json","data","fetchTask","addTask","method","headers","body","JSON","stringify","deleteTask","filter","toggleReminder","taskToToggle","updTask","path","exact","render","props","length","component","Footer","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.98bbf5e0.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\r\n\r\n\r\nconst Buttons = ({color, text, onClick}) => {\r\n\r\n    return (\r\n        <button\r\n            onClick={onClick} \r\n            style={{backgroundColor: color}} \r\n            className='btn'\r\n        >\r\n            {text}\r\n        </button>\r\n    )\r\n}\r\n\r\nButtons.defaultProps={\r\n    color:'steelblue',\r\n    text: 'Add',\r\n}\r\nButtons.propTypes={\r\n    text:PropTypes.string,\r\n    color: PropTypes.string,\r\n    onClick: PropTypes.func,\r\n}\r\n\r\nexport default Buttons\r\n","import PropTypes from 'prop-types'\r\nimport Button from './Buttons';\r\nimport {useLocation} from 'react-router-dom'\r\n\r\nconst Header = ({title, onAdd, showAdd}) => {\r\n  \r\n    const location = useLocation()\r\n    return (\r\n\r\n        \r\n        \r\n        <header className='header'>\r\n            <h1 >{title}</h1>\r\n\r\n           {location.pathname==='/' && (<Button \r\n                color={showAdd ? 'red' : 'green'} \r\n                text={showAdd ? 'Close' : 'Add'} \r\n                onClick={onAdd}\r\n            />)}\r\n            \r\n        </header>\r\n    )\r\n}\r\n\r\n// CSS in JS\r\n// const headingStyle={\r\n//     color:'red', \r\n//     backgroundColor: 'green'\r\n// }\r\n\r\n\r\nHeader.defaultProps = {\r\n    title:'task tracker default',\r\n}\r\n\r\nHeader.propTypes ={\r\n    title: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default Header\r\n","import {Link} from 'react-router-dom'\r\n\r\nconst footer = () => {\r\n    return (\r\n        <footer>\r\n            <p>\r\n                Copyright &copy; 2021\r\n            </p>\r\n            <Link to=\"/about\">\r\n                About\r\n            </Link>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default footer\r\n","import {Link} from 'react-router-dom'\r\n\r\n\r\nconst About = () => {\r\n    return (\r\n        <div>\r\n            <h4>Version 1.0.0</h4>\r\n            <Link to=\"/\">\r\n                Go Back\r\n            </Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default About\r\n","import {FaTimes} from 'react-icons/fa'\r\nconst Task = ({task, onDelete, onToggle}) => {\r\n    return (\r\n        <div className={`task ${task.reminder ? 'reminder' : ' '}`} onDoubleClick={() => onToggle(task.id)} >\r\n            <h3>{task.text}\r\n                <FaTimes\r\n                    onClick={() => onDelete(task.id)}\r\n                    style={{\r\n                    color: 'red',\r\n                    cursor: \"pointer\"\r\n                }}/>\r\n            </h3>\r\n            <p>{task.day}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Task\r\n","import Task from './Task'\r\n\r\nconst Tasks = ({tasks, onDelete, onToggle}) => {\r\n\r\n    return ( <> {\r\n        tasks.map((task) => (<Task key={task.id} task={task} onToggle={onToggle} onDelete={onDelete}/>))\r\n    } </>\r\n    )\r\n}\r\n\r\nexport default Tasks","import {useState} from 'react'\r\n\r\nconst AddTask = ({onAdd}) => {\r\n\r\n    const [text,\r\n        setText] = useState('')\r\n    const [day,\r\n        setDay] = useState('')\r\n    const [reminder,\r\n        setReminder] = useState(false)\r\n\r\n    const onSubmit=(e) => {\r\n        e.preventDefault()\r\n\r\n        if(!text){\r\n            alert(\"please add a task\")\r\n            return\r\n        }\r\n        onAdd({text, day, reminder})\r\n\r\n        setText('')\r\n        setDay('')\r\n        setReminder(false)\r\n    }\r\n\r\n    return (\r\n        <form className=\"add-form\" onSubmit={onSubmit}> \r\n            <div className=\"form-control\">\r\n                <label>Task</label>\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Add Task\"\r\n                    value={text}\r\n                    onChange={(e) => setText(e.target.value)}/>\r\n            </div>\r\n            <div className=\"form-control\">\r\n                <label>Day Time</label>\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Add Day  Time\"\r\n                    value={day}\r\n                    onChange={(e) => setDay(e.target.value)}/>\r\n            </div>\r\n            <div className=\"form-control form-control-check\">\r\n                <label>Reminder</label>\r\n                <input\r\n                    type=\"checkbox\"\r\n                    checked={reminder}\r\n                    value={reminder}\r\n                    onChange={(e) => setReminder(e.currentTarget.checked)}/>\r\n            </div>\r\n            <input type=\"submit\" className=\"btn btn-block\" value=\"Save Task\"/>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default AddTask\r\n","import {useState, useEffect} from 'react'\nimport {BrowserRouter as Router, Route} from 'react-router-dom'\n\nimport Header from './components/Header'\nimport Footer from './components/Footer'\nimport About from './components/About'\nimport Tasks from './components/Tasks'\nimport AddTask from './components/AddTask'\n\n\n\nfunction App() {\n  const [showAddTask, setShowAddTask]= useState(false)\n  const [tasksM, setTasks] = useState([])\n\n  useEffect(() => {\n    const getTasks = async() => {\n      const tasksFromServer = await fetchTasks()\n      setTasks(tasksFromServer)\n    }\n    getTasks()\n  }, [])\n\n  // fetch tasks \n  const fetchTasks = async() => {\n    const res = await fetch('http://localhost:5000/tasks')\n    const data = await res.json()\n\n    return data\n  }\n\n  // fetch task reminder\n  const fetchTask = async(id) => {\n    const res = await fetch(`http://localhost:5000/tasks/${id}`)\n    const data = await res.json()\n\n    return data\n  }\n\n\n// add task\nconst addTask= async(task) => {\n  const res = await fetch('http://localhost:5000/tasks', {\n    method:'POST',\n    headers:{\n      'Content-type': 'application/json'\n    },\n    body: JSON.stringify(task)\n  })\n  const data = await res.json()\n  setTasks([...tasksM, data])\n\n  // const id = Math.floor(Math.random() * 10000) + 1\n  // const newTask = {id, ...task}\n  // setTasks([...tasksM, newTask])\n}\n\n// delete task\nconst deleteTask = async(id) => {\n\n  await fetch(`http://localhost:5000/tasks/${id}`, {\n    method:'DELETE'\n  })\n\n  setTasks(tasksM.filter((task) => task.id !== id))\n}\n\n\n// toggle reminder\nconst toggleReminder = async(id) => {\n\n  const taskToToggle = await fetchTask(id)\n  const updTask = {...taskToToggle, reminder: !taskToToggle.reminder}\n  \n  const res = await fetch(`http://localhost:5000/tasks/${id}`,{\n    method: \"PUT\",\n    headers: {\n      \"Content-type\": \"application/json\"\n    },\n    body: JSON.stringify(updTask)\n  })\n\n  const data = await res.json()\n\n  // console.log(id);\n    setTasks(tasksM.map((task) => \n      task.id===id?{ ...task, reminder:data.reminder}: task\n    )\n  )\n}\n  return (\n    <Router>\n    <div className=\"container\">\n      <Header \n        title={'Task Tracker'} \n        onAdd={() => setShowAddTask(!showAddTask)} \n        showAdd={showAddTask}\n      />\n      \n        <Route path=\"/\" exact render={(props) =>(\n          <>\n          {showAddTask && <AddTask onAdd={addTask} />}\n            {tasksM.length>0 ? (\n            <Tasks \n              tasks={tasksM} \n              onDelete={deleteTask} \n              onToggle={toggleReminder}\n              />\n            ) : (' No Tasks to Show ')}\n          </>\n        )} />\n        <Route path=\"/about\" component={About} />\n        <Footer />\n    </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}